<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.onion.base.member.MemberDAO">
  		
  		<select id="getLogin" parameterType="MemberVO" resultMap="getLoginResult">
  			SELECT M.USERNAME, M.PASSWORD, M.EMAIL, M.ENABLED, R.NUM, R.ROLENAME FROM MEMBER M
  			INNER JOIN
  			MEMBERROLE MR
  			ON(M.USERNAME = MR.USERNAME)
  			INNER JOIN
  			ROLE R
  			ON (MR.NUM = R.NUM)
  			WHERE M.USERNAME = #{username}
  		</select>
  		
  		
  		<resultMap type="MemberVO" id="getLoginResult">
  			<id property="username" column="USERNAME"/>
  			<result property="password" column="PASSWORD"/>
  			<result property="email" column="EMAIL"/>
  			<result property="enabled" column="ENABLED"/>
  			<collection property="roleVOs" javaType="List" ofType="RoleVO">
  				<id property="num" column="NUM"/>
  				<result property="roleName" column="ROLENAME"/>
  			</collection>
  		</resultMap>
  		
  		<insert id="setJoin" parameterType="MemberVO">
  			INSERT INTO MEMBER (USERNAME, PASSWORD, NAME, EMAIL, BIRTH, ENABLED)
  			VALUES (#{username}, #{password}, #{name}, #{email}, #{birth}, 1)
  		</insert>
  		
  		<select id="getRoleNum" parameterType="RoleVO" resultType="RoleVO">
  				SELECT NUM FROM ROLE 
  				WHERE ROLENAME = #{roleName}
  		</select>
  		
  		<insert id="setMemberRole" parameterType="Map">
  			INSERT INTO MEMBERROLE (USERNAME, NUM)
  			VALUES (#{username}, #{num})
  		</insert>
  		
  		<select id="idDuplicateCheck" parameterType="MemberVO" resultType="MemberVO">
  			SELECT USERNAME FROM MEMBER
  			WHERE USERNAME = #{username}
  		</select>
  		
  		<select id="getMemberList" resultType="MemberVO">
  				SELECT * FROM MEMBER
  		</select>
  		
  		<update id="setLastTimeUpdate" parameterType="MemberVO">
  			UPDATE MEMBER SET LASTTIME = now()
  			WHERE USERNAME = #{username}
  		</update>
  		
  		<update id="setEnabledUpdate">
  			UPDATE MEMBER SET ENABLED = 0
			WHERE LASTTIME <![CDATA[<]]> SUBDATE(now(), INTERVAL 3 DAY)
  		</update>
  		
  		<select id="getBirth" resultType="MemberVO">
		 	SELECT NAME, EMAIL FROM MEMBER
		 	WHERE DATE_FORMAT(BIRTH, '%m-%d')  = DATE_FORMAT(NOW(), '%m-%d')
  		</select>
  		
  		<select id="getFindPassword" parameterType="MemberVO" resultType="MemberVO">
  			SELECT USERNAME, EMAIL FROM MEMBER
  			WHERE USERNAME = #{username} AND EMAIL = #{email}
  		</select>
  		
  		<update id="setTempPasswordUpdate" parameterType="MemberVO">
  			UPDATE MEMBER SET PASSWORD = #{password}
  			WHERE USERNAME = #{username}
  		</update>
  		

  		
  		
  
  </mapper>